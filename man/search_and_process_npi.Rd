% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_and_process_npi.R
\name{search_and_process_npi}
\alias{search_and_process_npi}
\title{Search and Process NPI Numbers}
\usage{
search_and_process_npi(
  data,
  enumeration_type = "ind",
  limit = 5L,
  country_code = "US",
  filter_credentials = c("MD", "DO"),
  save_chunk_size = 10,
  dest_dir = NULL,
  accumulate_path = NULL,
  resume = FALSE,
  progress_log = NULL,
  notify = TRUE
)
}
\arguments{
\item{data}{A data frame with columns 'first' and 'last' containing the names to search.}

\item{enumeration_type}{The enumeration type for NPI search (e.g., "ind", "org", "all"). Default is "ind".}

\item{limit}{The maximum number of search results to request for each name pair. Default is 5.}

\item{country_code}{Filter for only the "US".}

\item{filter_credentials}{A character vector containing the credentials to filter the NPI results. Default is c("MD", "DO").}

\item{save_chunk_size}{The number of results to save per chunk. Default is 10.}

\item{dest_dir}{Destination directory to save chunked results. Default is \code{NULL}
(no chunk files are written).}

\item{accumulate_path}{Optional CSV path that accumulates every non-empty result. When
provided, results are appended after each successful lookup.}

\item{resume}{Logical. If \code{TRUE} and \code{accumulate_path} already exists, names
that have been processed previously (based on the \code{search_term} column) are
skipped.}

\item{progress_log}{Optional file path used to log progress updates. The log file is
appended to and created automatically if it does not exist.}

\item{notify}{Logical. If \code{TRUE}, play a notification sound when processing
completes (requires the optional \pkg{beepr} package). Defaults to \code{TRUE}.}
}
\value{
A data frame containing the processed NPI search results.
}
\description{
This function takes an input data frame containing first and last names, performs NPI search and processing,
and filters results based on specified taxonomies. It supports customization for enumeration type, search limit,
and filtering credentials.
}
