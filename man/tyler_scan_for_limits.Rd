% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sanity_checks.R
\name{tyler_scan_for_limits}
\alias{tyler_scan_for_limits}
\title{Scan code files for artificial limit patterns}
\usage{
tyler_scan_for_limits(path = "R", recursive = TRUE, exclude_pattern = NULL)
}
\arguments{
\item{path}{Directory to scan. Defaults to "R/" directory.}

\item{recursive}{Whether to scan subdirectories. Defaults to TRUE.}

\item{exclude_pattern}{Optional regex pattern of files to exclude from scan.
For example, "test-.*\\\\.R$" to exclude test files.}
}
\value{
A data frame of found issues with columns: file, line, pattern, code.
Returns empty data frame if no issues found. Also prints warnings.
}
\description{
Scans R source files for common limiting anti-patterns that violate the
package policy of processing all available data. This is a code audit tool
to catch unintentional data limiting.
}
\details{
Searches for these anti-patterns:
\itemize{
\item \code{slice_head(n = )}
\item \code{head(data, n)}
\item \code{sample_n()}
\item \code{n_max = }
\item \code{max_records = }
\item \code{LIMIT n} (SQL)
}
}
\examples{
\dontrun{
# Scan all R files in package
issues <- tyler_scan_for_limits("R/")

# Scan with exclusions
issues <- tyler_scan_for_limits("R/", exclude_pattern = "deprecated")
}

}
